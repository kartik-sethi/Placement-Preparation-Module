import java.util.*;

public class Solution {
    static class Pair{
        int first, second;
        Pair(int first, int second){
            this.first = first;
            this.second = second;
        }
    }

    public static List< List< Integer > > mergeOverlappingIntervals(int [][]arr){
        // Write your code here.
        List<List<Integer>> res = new ArrayList<>();
        int n = arr.length;

        Pair[] pairs = new Pair[n];

        int i = 0;
        for(int[] e: arr){
            pairs[i++] = new Pair(e[0], e[1]);
        }
        
        Arrays.sort(pairs, Comparator.comparingInt(
            (Pair pair) -> pair.first).thenComparingInt(pair -> pair.second)
        );

        for(i=0; i<n; i++){
            int start = pairs[i].first;
            int end = pairs[i].second;
            
            if(res.isEmpty() || res.get(res.size() - 1).get(1) < start){
                res.add(Arrays.asList(start, end));
            }
            else{
                res.get(res.size() - 1).set(1,
                    Math.max(res.get(res.size() - 1).get(1), end) );

            }
        }

        return res;
    }
}                                                                                                                      
